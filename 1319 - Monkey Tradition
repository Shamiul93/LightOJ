/*
    Author : RAJON BARDHAN
    AUST CSE 27th Batch
    All my programming success are dedicated to my mom , dad , little sister madhobi , teachers , friends and love TANIA SULTANA RIMY

    Problem Name : 1319 - Monkey Tradition ( LightOJ )
    ALGORITHM : Number Theory
*/

#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define memo(a,b) memset(a,b,sizeof(a))
#define INF 1e9
#define EPS 1e-8
#define PI 3.14159265358979323846

typedef long long ll ;
typedef unsigned long long  ull ;

/* int dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* int dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* int dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* int dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction

struct
{
    ll p , r ;
}arr[15];

/* Calculate ( a*b ) %c */
ll mulmod(ll a,ll b,ll c)
{
    ll x = 0 , y = a%c ;
    while(b>0)
    {
        if(b%2) x = (x+y)%c ;
        y=(y*2)%c;
        b/=2;
    }
    return x%c ;
}

/* Calculate ( a^b ) %c */
ll modulo(ll a,ll b,ll c)
{
    ll x = 1 , y = a%c ;
    while( b > 0 )
    {
        if(b%2) x = mulmod(x,y,c) ;
        y=mulmod(y,y,c);
        b/=2;
    }
    return x%c ;
}

ll modulus_Inverse(ll A,ll MOD)
{
    return modulo(A,MOD-2,MOD);
}

int main()
{
    //freopen("input.txt","r",stdin);
    int T ;
    cin >> T ;
    for(int cas=1;cas<=T;cas++)
    {
        int n ;
        cin >> n ;
        ll ans = 0 , m = 1 ;

        for(int i=1;i<=n;i++) cin >> arr[i].p >> arr[i].r , m*=arr[i].p ;

        for(int i=1;i<=n;i++)
        {
            ll mi = m / arr[i].p ;
            ll x = mulmod(mulmod(mi,modulus_Inverse(mi,arr[i].p),m),arr[i].r,m) ;
            ans=(ans+x)%m;
        }

        cout << "Case " << cas << ": " << ans%m << endl ;
    }
    return 0;
}
