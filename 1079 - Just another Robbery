/*
    Author : RAJON BARDHAN
    AUST CSE 27th Batch
    All my programming success are dedicated to my mom , dad , little sister madhobi , teachers , friends and love TANIA SULTANA RIMY

    Problem Name : 1079 - Just another Robbery
    ALGORITHM : Probability + Dynamic Programming
*/

#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define memo(a,b) memset(a,b,sizeof(a))
#define INF 1e9
#define EPS 1e-8
#define PI 3.14159265358979323846

typedef long long ll ;
typedef unsigned long long ull ;

/* int dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* int dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* int dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* int dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction

struct
{
    int tk ;
    double p ;
}arr[100+10];

int n , total ;
double p , f[100*100+10] ;

int solve()
{
    for(int i=1;i<=100*100;i++) f[i] = 2.0 ;

    for(int i=1;i<=n;i++)
    {
        for(int j=total;j>=arr[i].tk;j--)
        {
            f[j] = min(f[j],f[j-arr[i].tk]+(1.0-f[j-arr[i].tk])*arr[i].p);
        }
    }

    for(int j=total;j>=0;j--) if(f[j]<p) return j ;
}

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int T ;
    cin >> T ;
    for(int cas=1;cas<=T;cas++)
    {
        total = 0 ;
        cin >> p >> n ;
        for(int i=1;i<=n;i++) cin >> arr[i].tk >> arr[i].p , total+=arr[i].tk ;

        cout << "Case " << cas << ": " << solve() << endl ;
    }
    return 0;
}
