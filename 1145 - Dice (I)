/*
    Author : RAJON BARDHAN
    AUST CSE 27th Batch
    All my programming success are dedicated to my mom , dad , little sister madhobi , teachers , friends and love TANIA SULTANA RIMY

    Problem Name : 1145 - Dice (I) ( LightOJ )
    ALGORITHM : Dynamic Programming
*/

#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define memo(a,b) memset(a,b,sizeof(a))
#define INF 1e9
#define EPS 1e-8
#define PI 3.14159265358979323846

typedef long long ll ;
typedef unsigned long long ull ;

/* int dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* int dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* int dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* int dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction

ll dp[2][20000+10] , mod = 100000007 ;

ll solve()
{
    int N , K , S ;
    cin >> N >> K >> S ;

    int now = 1 ;

    for(int i=1;i<=N;i++)
    {
        for(int j=1;j<=S;j++)
        {
            if(i==1)
            {
                if(j<=K) dp[i][j] = 1 ;
                else dp[i][j] = 0 ;
            }
            else
            {
                dp[now][j] = ( dp[now][j-1] + dp[now^1][j-1] - ( j-K-1 < 0 ? 0 : dp[now^1][j-K-1] ) ) %mod ;
                dp[now][j] = ( dp[now][j] + mod ) % mod ;
            }
        }
        now=now^1;
    }

    return dp[now^1][S] ;
}

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int T ;
    cin >> T ;

    for(int cas=1;cas<=T;cas++)
    {
        cout << "Case " << cas << ": " << solve() << endl ;
    }
    return 0;
}
